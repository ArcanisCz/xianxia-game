# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  install:
    docker:
      - image: circleci/node:8.12.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: npm install --no-audit
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - node_modules


  lint:
    docker:
      - image: circleci/node:8.12.0
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
            keys:
            - v1-eslint
      - run: npm run lint
      - save_cache:
            paths:
            - .eslintcache
            key: v1-eslint

  build:
    docker:
      - image: circleci/node:8.12.0
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: npm run build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist
            - package.json
            - gulpfile.js
            - public

  test:
    docker:
      - image: circleci/node:8.12.0
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: npm run test:ci


  deploy:
    docker:
      - image: circleci/node:8.12.0
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: npm run deploy -- --user $FTP_USER --password $FTP_PASSWORD --rollbar $ROLLBAR_ACCESS
      - store_artifacts:
          paths:
            - ~/repo/dist
            - ~/repo/public

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install
      - lint:
          requires:
            - install
      - build:
          requires:
            - install
      - test:
          requires:
          - install
      - deploy:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              only:
                - /^master$/
